@model ItemCode
<link rel="stylesheet" href="~/Content/styl.css" />

@{
    ViewBag.Title = "SaveProduct";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <link rel="stylesheet" href="~/Content/styl.css" />
    <script src="~/Scripts/sweetalert.min.js"></script>
    <script type="text/javascript" src="~/Scripts/main.js"> </script>
</head>
<body>
    <h1>Add Product</h1>
    @if (TempData["Al"] != null)
    {
        <script>
            swal("Saved successfully!", " ", "success");
        </script>
        <strong style="color:green">Saved successfully! </strong>@TempData["Al"]
    }
    @using (Html.BeginForm("SaveProduct", "Product", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="Elements">
 
            <hr />

            <div class="">
                @Html.LabelFor(model => model.ArabicName, htmlAttributes: new { @class = "Lab" })

                @Html.EditorFor(model => model.ArabicName, new { htmlAttributes = new { @class = "Txt", @placeholder = "ArabicName", @required = "required" } }) @*Required TextBox*@
            </div>

            <div class="">
                @Html.LabelFor(model => model.EnglishName, htmlAttributes: new { @class = "Lab" })
                @Html.EditorFor(model => model.EnglishName, new { htmlAttributes = new { @class = "Txt", @placeholder = "EnglishName" } })
            </div>

            <div class="">
                @Html.LabelFor(model => model.DescName, htmlAttributes: new { @class = "Lab" })
                @Html.EditorFor(model => model.DescName, new { htmlAttributes = new { @class = "Txt", @placeholder = "Title" } })
            </div>
            <div class="">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "Lab" })
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "Txt", @placeholder = "Description" } })
            </div>
            <label class="Lab">Stock</label>
            @Html.DropDownListFor(model => model.StoreID, ViewBag.DepartmentList2 as SelectList, "--select--", new { @class = "Txt drop", @required = "required" }) @*Required DropDownList *@
            <br /> <label class="Lab">Unit</label>
            @Html.DropDownListFor(model => model.Unit1, ViewBag.DepartmentList1 as SelectList, "--select--", new { @class = "Txt drop", @required = "required" })
            <br /> <label class="Lab">Category</label>
            @Html.DropDownListFor(model => model.SerialGroup, ViewBag.DepartmentList3 as SelectList, "--select--", new { @class = "Txt drop", @required = "required" })
            <div class="">
                <label class="Lab">Purchase price</label>
                @Html.EditorFor(model => model.PricePurchase1Unit1, new { htmlAttributes = new { @class = "Txt", @placeholder = "" } })
            </div>
            <div class="">
                <label class="Lab">Sales price</label>
                @Html.EditorFor(model => model.PriceSale1Unit1, new { htmlAttributes = new { @class = "Txt", @placeholder = "", @required = "required" } })
            </div>
            @*<div class="">
                <label class="Lab">Quantity</label>
                @Html.EditorFor(model => model.Counts, new { htmlAttributes = new { @class = "Txt", @placeholder = "" } })
            </div>*@
            <br />
            <div class="">
                <button class="save">Save</button>
                @Html.ActionLink("Show All", "DisplayItems", "", new { htmlAttributes = new { @class = "save", @type = "button" } })
            </div>
        </div>
    }

</body>
</html>
