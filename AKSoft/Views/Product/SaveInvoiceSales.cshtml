@model AKSoft.Models.HSales
@{
    ViewBag.Title = "SaveInvoiceSales";
    Layout = "~/Views/Shared/_Layout.cshtml";

}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title></title>
    <link rel="stylesheet" href="~/Content/styl.css" />
    <script src="~/Scripts/sweetalert.min.js"></script>
<style>
.Elements{
   background-color: #e5e5e5; 
  list-style-type: none;
  border:ridge 1px;
  margin: 0;
 padding: 15px;
}
        .head
        {
                 background-color: #3577ff;
    width: 40%;
    color: white
        }
</style>
</head>
<body>
    <br />
    @if (TempData["Al"] != null)
    {
        <script>
            swal("Saved successfully!", " ", "success");
        </script>
        <strong style="color:green">Saved successfully! </strong>@TempData["Al"]
    }

    @using (Html.BeginForm("SaveInvoiceSales", "Product", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
    <h1 class="head">Invoice Sales</h1>
    <ul class="Elements">
            <li class="gs">
                    <label class="Lab">Store</label>
                    @Html.DropDownListFor(model => model.StoreSerial, ViewBag.DepartmentList2 as SelectList, "--select--", new { @class = "Txt drop", @required = "required" }) @*Required DropDownList *@
                <label class="Lab">Category</label>
                @Html.DropDownListFor(model => model.GroupSerial, ViewBag.DepartmentList3 as SelectList, "--select--", new { @class = "Txt drop", @required = "required" })
                <label class="Lab">Customer</label>
                @Html.DropDownListFor(model => model.CustomerSerial, ViewBag.DepartmentList5 as SelectList, "--select--", new { @class = "Txt drop", @required = "required" })
            </li>
            
            <li>
                <label class="Lab">Product Name</label>
                @Html.DropDownListFor(model => model.ItemSerial, ViewBag.DepartmentList4 as SelectList, "--select--", new { @class = "Txt drop", @required = "required" })

                <label class="Lab">Unit Name</label>
                @Html.DropDownListFor(model => model.UnitSerial, ViewBag.DepartmentList1 as SelectList, "--select--", new { @class = "Txt drop", @required = "required" })
            </li>
              <li>
                  @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "Lab" })

                  @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "Txt", @placeholder = "Quantity", @id = "txtFirstNo", @onkeyup = "Multiy()", @required = "required" } })
              </li>
        <li>
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "Lab" })
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "Txt", @placeholder = "Price", @id = "txtSecondNo", @onkeyup = "Multiy()", @required = "required" } }) @*Multiply function in js*@
        </li>
    <li>
        @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "Lab" })
        @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "Txt", @placeholder = "Total", @id = "txtResult" } })
    </li>
<li>
    <button class="save">Save</button>
    @Html.ActionLink("Show All", "DisplayInvoiceSales", "", new { htmlAttributes = new { @class = "save", @type = "button" } })
</li>
           

    </ul>


    }
    <script type="text/javascript">
        function Multiy() {
            var txtFirstNo = document.getElementById('txtFirstNo').value;
            var txtSecondNo = document.getElementById('txtSecondNo').value;
            var result = parseFloat(txtFirstNo) * parseFloat(txtSecondNo);//Don't forget the captial in float
            if (!isNaN(result)) {
                document.getElementById('txtResult').value = result;
            }
        }
    </script>
</body>
</html>